
#!/usr/bin/env python3
import requests
import json
import sys

def test_fastapi():
    base_url = "http://127.0.0.1:8001"
    
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ FastAPI —Å–µ—Ä–≤–µ—Ä–∞...")
    
    # Test health endpoint
    try:
        response = requests.get(f"{base_url}/health", timeout=5)
        if response.status_code == 200:
            data = response.json()
            print("‚úÖ Health check –ø—Ä–æ—à–µ–ª —É—Å–ø–µ—à–Ω–æ")
            print(f"   Status: {data.get('status')}")
            print(f"   OpenAI configured: {data.get('openai_configured')}")
            print(f"   API key present: {data.get('api_key_present')}")
        else:
            print(f"‚ùå Health check failed: {response.status_code}")
            return False
    except Exception as e:
        print(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ FastAPI: {e}")
        return False
    
    # Test root endpoint
    try:
        response = requests.get(f"{base_url}/", timeout=5)
        if response.status_code == 200:
            print("‚úÖ Root endpoint —Ä–∞–±–æ—Ç–∞–µ—Ç")
        else:
            print(f"‚ùå Root endpoint error: {response.status_code}")
    except Exception as e:
        print(f"‚ùå Root endpoint error: {e}")
    
    # Test chat endpoint (if OpenAI is configured)
    try:
        test_request = {
            "messages": [
                {"role": "user", "content": "–ü—Ä–∏–≤–µ—Ç!"}
            ],
            "project_context": {}
        }
        
        response = requests.post(
            f"{base_url}/ai/chat", 
            json=test_request,
            timeout=10
        )
        
        if response.status_code == 200:
            print("‚úÖ Chat endpoint —Ä–∞–±–æ—Ç–∞–µ—Ç")
        elif response.status_code == 500:
            print("‚ö†Ô∏è Chat endpoint –¥–æ—Å—Ç—É–ø–µ–Ω, –Ω–æ OpenAI –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω")
        else:
            print(f"‚ùå Chat endpoint error: {response.status_code}")
            
    except Exception as e:
        print(f"‚ùå Chat endpoint error: {e}")
    
    print("\nüéâ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
    return True

if __name__ == "__main__":
    test_fastapi()
